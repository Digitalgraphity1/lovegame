
import React, { useState } from 'react';
import { HeartIcon } from './icons/HeartIcon';

interface NameInputScreenProps {
  onSubmit: (name1: string, name2: string) => void;
}

const NameInputScreen: React.FC<NameInputScreenProps> = ({ onSubmit }) => {
  const [name1, setName1] = useState('');
  const [name2, setName2] = useState('');
  const [error, setError] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!name1.trim() || !name2.trim()) {
      setError('Please enter both names to begin the journey of love!');
      return;
    }
    if (name1.trim().toLowerCase() === name2.trim().toLowerCase()) {
      setError('Names should be different for a proper love test! Or are you testing self-love? ðŸ˜‰');
      return;
    }
    setError('');
    onSubmit(name1.trim(), name2.trim());
  };

  return (
    <div className="animate-fadeIn flex flex-col items-center">
      <HeartIcon className="w-16 h-16 text-red-400 mb-4" />
      <h2 className="text-3xl sm:text-4xl font-semibold mb-6 text-purple-700">Enter Your Names</h2>
      <p className="text-md sm:text-lg mb-8 text-slate-600">Let's personalize this journey of affection!</p>
      <form onSubmit={handleSubmit} className="w-full max-w-sm space-y-6">
        <div>
          <label htmlFor="partner1Name" className="block text-sm font-medium text-slate-700 mb-1">Your Name</label>
          <input
            id="partner1Name"
            type="text"
            value={name1}
            onChange={(e) => setName1(e.target.value)}
            placeholder="E.g., Romeo"
            className="w-full px-4 py-3 rounded-xl bg-white/30 text-slate-800 placeholder-slate-500 focus:ring-2 focus:ring-pink-400 focus:outline-none shadow-md transition-all"
          />
        </div>
        <div>
          <label htmlFor="partner2Name" className="block text-sm font-medium text-slate-700 mb-1">Your Partner's Name</label>
          <input
            id="partner2Name"
            type="text"
            value={name2}
            onChange={(e) => setName2(e.target.value)}
            placeholder="E.g., Juliet"
            className="w-full px-4 py-3 rounded-xl bg-white/30 text-slate-800 placeholder-slate-500 focus:ring-2 focus:ring-pink-400 focus:outline-none shadow-md transition-all"
          />
        </div>
        {error && <p className="text-red-500 text-sm bg-red-700/30 p-2 rounded-md">{error}</p>}
        <button
          type="submit"
          className="w-full bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-bold py-3 px-6 rounded-full shadow-lg transform hover:scale-105 transition-all duration-300 text-lg"
        >
          Start Questions
        </button>
      </form>
    </div>
  );
};

export default NameInputScreen;
